##############
# requirements
http = require \http
path = require \path

constructor = require './constructor'

################
# configurations
config = JSON.parse (require \fs .readFileSync 'config', 'utf8')
constructor.setConfiguration config

PORT = config.port
HTDOCS = config.htdocs

##############
## http-server
server = http.createServer (request, response) ->
  console.log "rec: request type '#{request.method}' from #{request.connection.remoteAddress}: '#{request.url}'"
  url = require 'url' .parse request.url, true
  
  if url.query.action && url.query.action is 'edit' then edit = true
  else edit = false
  
  doc_id = url.pathname.substr 1
  if doc_id.length is 0 then doc_id = config.home
  
  style = 'normal'
  if url.query && url.query.style && url.query.style is 'plain' then style = 'plain'
  
  if request.method is 'POST'
    # handle POST
    request.setEncoding 'utf8'
    post = ''
    
    request.on 'data', (data) ->
      if post.length+data.length <= config.maxPostSize
        post += data
    
    request.on 'end', ->
      post := require 'querystring' .parse post
      if post.input
        constructor.compile doc_id, post.input
  
  constructor.construct doc_id, response, edit, style

server.listen PORT, '127.0.0.1'
console.log "Server running at http://127.0.0.1:#{PORT}/\n"

##############
# utils ######
_formatToOption = (text) ->
  text = text.replace /\ /g, '_'
  text = text.replace /\\t/g, '__'

